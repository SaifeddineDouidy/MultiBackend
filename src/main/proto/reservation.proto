syntax = "proto3";

option java_package = "ma.ensa.full_backend.stubs";
option java_multiple_files = true;
option java_outer_classname = "ReservationServiceProto";

// Define the service for Reservation
service ReservationService {
  rpc CreateReservation (CreateReservationRequest) returns (CreateReservationResponse);
  rpc GetReservation (GetReservationRequest) returns (GetReservationResponse);
  rpc UpdateReservation (UpdateReservationRequest) returns (UpdateReservationResponse);
  rpc DeleteReservation (DeleteReservationRequest) returns (DeleteReservationResponse);
}

// Reservation message
message Reservation {
  int64 id = 1;
  string checkInDate = 2;
  string checkOutDate = 3;
  string typeChambre = 4;
}

// Request and Response messages
message CreateReservationRequest {
  int64 clientId = 1; // ID of the client
  string checkInDate = 2; // Must match "yyyy-MM-dd"
  string checkOutDate = 3; // Must match "yyyy-MM-dd"
  string typeChambre = 4; // Enum mapping expected
}

message CreateReservationResponse {
  int64 id = 1; // Reservation ID
  string message = 2; // Confirmation or error message
}

// Other service-related messages (abbreviated for brevity)
message GetReservationRequest {
  int64 id = 1;
}

message GetReservationResponse {
  Reservation reservation = 1;
}

message UpdateReservationRequest {
  Reservation reservation = 1;
}

message UpdateReservationResponse {
  Reservation reservation = 1;
}

message DeleteReservationRequest {
  int64 id = 1;
}

message DeleteReservationResponse {
  // Empty response for delete operation
}

enum TypeChambre {
  STANDARD = 0;
  DELUXE = 1;
  SUITE = 2;
}